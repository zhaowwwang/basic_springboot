<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basic.core.mapper.system.SystemUserMapper">
  <resultMap id="BaseResultMap" type="com.basic.core.bean.system.SystemUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="user_age" jdbcType="INTEGER" property="userAge" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_mobile" jdbcType="VARCHAR" property="userMobile" />
    <result column="user_status" jdbcType="CHAR" property="userStatus" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
    <result column="user_salt" jdbcType="VARCHAR" property="userSalt" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, password, real_name, user_age, user_email, user_mobile, user_status, 
    organization_id, user_salt, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from system_user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getSystemUserList" parameterType="com.basic.core.bean.system.SystemUser" resultMap="BaseResultMap">
    SELECT a.id, a.user_name, a.real_name, a.user_age, a.user_email, a.user_mobile, a.user_status,a.update_time,b.org_name,a.create_time
    FROM system_user a left join system_organization b on a.organization_id=b.id
    <where>
      <if test="userName!=null and userName!=''">
        a.user_name like concat('%',#{userName},'%')
      </if>
      <if test="userMobile!=null and userMobile!=''">
        and a.user_mobile = #{userMobile}
      </if>
    </where>
    order by create_time
    LIMIT #{startOfPage}, #{pageSize}
  </select>

  <select id="getSystemUserListCount" parameterType="com.basic.core.bean.system.SystemUser" resultType="int">
    SELECT COUNT(1) FROM system_user
    <where>
      <if test="userName!=null and userName!=''">
        user_name like concat('%',#{userName},'%')
      </if>
      <if test="userMobile!=null and userMobile!=''">
        and user_mobile = #{userMobile}
      </if>
    </where>
  </select>

  <select id="getSystemUserByUserName" parameterType="string" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/> FROM system_user
    WHERE user_name = #{userName}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from system_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.basic.core.bean.system.SystemUser">
    insert into system_user (id, user_name, password, 
      real_name, user_age, user_email, 
      user_mobile, user_status, organization_id, 
      user_salt, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{userAge,jdbcType=INTEGER}, #{userEmail,jdbcType=VARCHAR}, 
      #{userMobile,jdbcType=VARCHAR}, #{userStatus,jdbcType=CHAR}, #{organizationId,jdbcType=INTEGER}, 
      #{userSalt,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.basic.core.bean.system.SystemUser">
    insert into system_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="userAge != null">
        user_age,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userMobile != null">
        user_mobile,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="userSalt != null">
        user_salt,
      </if>
      create_time,update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=CHAR},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="userSalt != null">
        #{userSalt,jdbcType=VARCHAR},
      </if>
      now(),now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.basic.core.bean.system.SystemUser">
    update system_user
    <set>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        user_mobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=CHAR},
      </if>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.basic.core.bean.system.SystemUser">
    update system_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      user_age = #{userAge,jdbcType=INTEGER},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_mobile = #{userMobile,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=CHAR},
      organization_id = #{organizationId,jdbcType=INTEGER},
      user_salt = #{userSalt,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getUserRoleList" parameterType="integer" resultType="integer">
    SELECT role_id FROM system_user_role WHERE user_id = #{userId}
  </select>

  <update id="updatePwd" parameterType="com.basic.core.bean.system.SystemUser">
    update system_user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userSalt != null">
        user_salt = #{userSalt,jdbcType=VARCHAR},
      </if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>