<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basic.core.mapper.system.UserSmsCodeMapper">
  <resultMap id="BaseResultMap" type="com.basic.core.bean.system.UserSmsCode">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="vrf_code" jdbcType="VARCHAR" property="vrfCode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, phone, vrf_code, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_sms_code
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getFiveCodeByMobile" resultType="com.basic.core.bean.system.UserSmsCode">
    select <include refid="Base_Column_List"/>
    from user_sms_code where phone = #{phone}
    and create_time >= date_add(now(), interval - 5 minute)
    order by create_time desc limit 1
  </select>

  <select id="selectCountByPhone" resultType="java.lang.Integer" parameterType="string">
    select count(1) from user_sms_code where phone = #{phone} and create_time >= now()
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_sms_code
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.basic.core.bean.system.UserSmsCode">
    insert into user_sms_code (id, phone, vrf_code, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{vrfCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.basic.core.bean.system.UserSmsCode">
    insert into user_sms_code
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="vrfCode != null">
        vrf_code,
      </if>
      create_time,
      update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="vrfCode != null">
        #{vrfCode,jdbcType=VARCHAR},
      </if>
      now(),now()
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.basic.core.bean.system.UserSmsCode">
    update user_sms_code
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="vrfCode != null">
        vrf_code = #{vrfCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.basic.core.bean.system.UserSmsCode">
    update user_sms_code
    set phone = #{phone,jdbcType=VARCHAR},
      vrf_code = #{vrfCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>